% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/callbacks-interrupt.R
\name{luz_callback_interrupt}
\alias{luz_callback_interrupt}
\title{Interrupt callback}
\usage{
luz_callback_interrupt()
}
\value{
A \code{luz_callback}
}
\description{
Adds a handler that allows interrupting the training loop using \code{ctrl + C}.
Also registers a \code{on_interrupt} breakpoint so users can register callbacks to
be run on training loop interruption.
}
\note{
In general you don't need to use these callback by yourself because it's always
included by default in \code{\link[=fit.luz_module_generator]{fit.luz_module_generator()}}.
}
\examples{
interrupt_callback <- luz_callback_interrupt()

}
\seealso{
Other luz_callbacks: 
\code{\link{luz_callback_csv_logger}()},
\code{\link{luz_callback_early_stopping}()},
\code{\link{luz_callback_lr_scheduler}()},
\code{\link{luz_callback_metrics}()},
\code{\link{luz_callback_model_checkpoint}()},
\code{\link{luz_callback_profile}()},
\code{\link{luz_callback_progress}()},
\code{\link{luz_callback_train_valid}()},
\code{\link{luz_callback_validation_check}()},
\code{\link{luz_callback}()}
}
\concept{luz_callbacks}
